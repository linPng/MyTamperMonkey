// ==UserScript==
// @name         Bilibili视频下载助手
// @namespace    http://tampermonkey.net/
// @version      1.5
// @description  在Bilibili视频页面、首页和关注页面添加下载按钮
// @author       You
// @match        https://www.bilibili.com/*
// @match        https://t.bilibili.com/*
// @match        https://search.bilibili.com/*
// @connect      localhost
// @grant        GM_xmlhttpRequest
// ==/UserScript==

(function() {
    'use strict';

    const API_BASE = 'http://localhost:8899';

    // 为首页视频卡片添加下载按钮
    function addButtonsToVideoCards() {
        // 更新选择器，包含关注页面的动态视频卡片
        const videoCards = document.querySelectorAll(
            '.bili-video-card, .video-card, .card-box, .bili-live-card, ' +
            '.bili-dyn-card-video, .suit-video-card, .bili-dyn-content__orig__major, ' +
            '.bili-dyn-content__orig, .bili-dyn-list__item'
        );

        videoCards.forEach(card => {
            // 避免重复添加
            if (card.querySelector('.custom-download-btns')) return;

            // 获取视频链接 - 针对不同页面类型的选择器
            let linkElement = null;
            let videoUrl = '';

            // 首先尝试常规的视频链接选择器
            linkElement = card.querySelector('a[href*="/video/"]');

            // 如果没找到，尝试关注页面的特殊结构
            if (!linkElement) {
                linkElement = card.querySelector('.bili-dyn-card-video');
                if (linkElement && linkElement.href && linkElement.href.includes('/video/')) {
                    // 找到了关注页面的视频链接
                } else {
                    linkElement = null;
                }
            }

            // 如果还是没找到，尝试在子元素中查找
            if (!linkElement) {
                const parentContainer = card.closest('.bili-dyn-list__item') || card.closest('.bili-dyn-item');
                if (parentContainer) {
                    linkElement = parentContainer.querySelector('a[href*="/video/"], .bili-dyn-card-video[href*="/video/"]');
                }
            }

            if (!linkElement || !linkElement.href) {
                return;
            }

            videoUrl = linkElement.href;
            // 处理相对链接
            if (videoUrl.startsWith('//')) {
                videoUrl = 'https:' + videoUrl;
            } else if (videoUrl.startsWith('/')) {
                videoUrl = 'https://www.bilibili.com' + videoUrl;
            }

            // 找到合适的容器来添加按钮
            let targetContainer = card;

            // 对于关注页面，寻找视频封面容器
            const coverElement = card.querySelector('.bili-dyn-card-video__cover') ||
                                card.querySelector('.bili-dyn-card-video__header') ||
                                card.querySelector('.b-img') ||
                                linkElement;

            if (coverElement) {
                targetContainer = coverElement;
            }

            // 创建按钮容器
            const btnContainer = document.createElement('div');
            btnContainer.className = 'custom-download-btns';
            btnContainer.style.cssText = `
                position: absolute !important;
                top: 8px !important;
                left: 8px !important;
                z-index: 99999 !important;
                display: flex !important;
                gap: 4px !important;
                pointer-events: auto !important;
                background: rgba(0,0,0,0.1) !important;
                padding: 2px !important;
                border-radius: 6px !important;
            `;

            // 创建音频下载按钮
            const audioBtn = document.createElement('button');
            audioBtn.innerHTML = '🎵';
            audioBtn.title = '下载音频';
            audioBtn.style.cssText = `
                background: rgba(255, 102, 153, 0.95) !important;
                color: white !important;
                border: none !important;
                padding: 6px 8px !important;
                border-radius: 4px !important;
                cursor: pointer !important;
                font-size: 12px !important;
                font-weight: bold !important;
                min-width: 28px !important;
                height: 28px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                box-shadow: 0 2px 6px rgba(0,0,0,0.4) !important;
            `;

            audioBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                e.stopImmediatePropagation();
                downloadMedia(videoUrl, 'audio');
            }, true);

            // 创建视频下载按钮
            const videoBtn = document.createElement('button');
            videoBtn.innerHTML = '🎬';
            videoBtn.title = '下载视频';
            videoBtn.style.cssText = `
                background: rgba(0, 161, 214, 0.95) !important;
                color: white !important;
                border: none !important;
                padding: 6px 8px !important;
                border-radius: 4px !important;
                cursor: pointer !important;
                font-size: 12px !important;
                font-weight: bold !important;
                min-width: 28px !important;
                height: 28px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                box-shadow: 0 2px 6px rgba(0,0,0,0.4) !important;
            `;

            videoBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                e.stopImmediatePropagation();
                showQualityMenu(videoUrl);
            }, true);

            btnContainer.appendChild(audioBtn);
            btnContainer.appendChild(videoBtn);

            // 设置容器为相对定位
            targetContainer.style.position = 'relative';
            targetContainer.appendChild(btnContainer);
        });
    }

    // 为视频播放页添加下载按钮
    function addButtonsToVideoPlayer() {
        // 检查是否已经添加了按钮
        if (document.getElementById('player-download-buttons')) {
            return;
        }

        // 找到视频播放器
        const videoPlayer = document.querySelector('.bpx-player-video-wrap') ||
                           document.querySelector('#bilibili-player') ||
                           document.querySelector('.player-wrap');
        if (!videoPlayer) {
            return;
        }

        const videoUrl = window.location.href;

        // 创建按钮容器
        const buttonContainer = document.createElement('div');
        buttonContainer.id = 'player-download-buttons';
        buttonContainer.style.cssText = `
            position: absolute !important;
            top: 10px !important;
            left: 10px !important;
            z-index: 99999 !important;
            display: flex !important;
            gap: 5px !important;
            pointer-events: auto !important;
        `;

        // 创建下载音频按钮
        const audioBtn = document.createElement('button');
        audioBtn.textContent = '🎵 音频';
        audioBtn.style.cssText = `
            background: rgba(255, 102, 153, 0.9) !important;
            color: white !important;
            border: none !important;
            padding: 8px 12px !important;
            border-radius: 4px !important;
            cursor: pointer !important;
            font-size: 12px !important;
            font-weight: bold !important;
            pointer-events: auto !important;
            z-index: 99999 !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.3) !important;
        `;
        audioBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            downloadMedia(videoUrl, 'audio');
        }, true);

        // 创建下载视频按钮
        const videoBtn = document.createElement('button');
        videoBtn.textContent = '🎬 视频';
        videoBtn.style.cssText = `
            background: rgba(0, 161, 214, 0.9) !important;
            color: white !important;
            border: none !important;
            padding: 8px 12px !important;
            border-radius: 4px !important;
            cursor: pointer !important;
            font-size: 12px !important;
            font-weight: bold !important;
            pointer-events: auto !important;
            z-index: 99999 !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.3) !important;
        `;
        videoBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            showQualityMenu(videoUrl);
        }, true);

        buttonContainer.appendChild(audioBtn);
        buttonContainer.appendChild(videoBtn);

        // 添加到视频播放器
        videoPlayer.style.position = 'relative';
        videoPlayer.appendChild(buttonContainer);
    }

    function downloadMedia(url, type, quality = null) {
        const requestData = {
            url: url,
            type: type
        };

        if (quality) {
            requestData.quality = quality;
        }

        GM_xmlhttpRequest({
            method: 'POST',
            url: `${API_BASE}/download`,
            headers: {
                'Content-Type': 'application/json',
            },
            data: JSON.stringify(requestData),
            onload: function(response) {
                try {
                    const result = JSON.parse(response.responseText);
                    if (result.success) {
                        alert('下载任务已启动！保存路径：' + result.download_path);
                    } else {
                        alert('下载失败: ' + result.error);
                    }
                } catch (e) {
                    alert('解析响应失败');
                }
            },
            onerror: function() {
                alert('连接服务器失败，请确保本地服务正在运行');
            }
        });
    }

    function showQualityMenu(url) {
        // 移除已存在的菜单
        const existingMenu = document.getElementById('quality-menu');
        if (existingMenu) {
            existingMenu.remove();
        }

        // 创建质量选择菜单
        const menu = document.createElement('div');
        menu.id = 'quality-menu';
        menu.style.cssText = `
            position: fixed !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) !important;
            background: white !important;
            border: 2px solid #ccc !important;
            border-radius: 8px !important;
            padding: 20px !important;
            z-index: 999999 !important;
            box-shadow: 0 4px 20px rgba(0,0,0,0.5) !important;
            min-width: 200px !important;
        `;

        const title = document.createElement('h3');
        title.textContent = '选择视频质量';
        title.style.cssText = 'margin: 0 0 15px 0 !important; color: #333 !important;';
        menu.appendChild(title);

        const qualities = [
            { key: '4k', label: '4K (2160p)' },
            { key: 'best', label: '最高画质 (1080p)' },
            { key: '720p', label: '高清 (720p)' },
            { key: '480p', label: '标清 (480p)' },
            { key: 'small', label: '最小文件' }
        ];

        qualities.forEach(quality => {
            const btn = document.createElement('button');
            btn.textContent = quality.label;
            btn.style.cssText = `
                display: block !important;
                width: 100% !important;
                margin: 5px 0 !important;
                padding: 10px !important;
                background: #00a1d6 !important;
                color: white !important;
                border: none !important;
                border-radius: 4px !important;
                cursor: pointer !important;
            `;
            btn.onclick = () => {
                downloadMedia(url, 'video', quality.key);
                document.body.removeChild(menu);
            };
            menu.appendChild(btn);
        });

        // 添加取消按钮
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = '取消';
        cancelBtn.style.cssText = `
            display: block !important;
            width: 100% !important;
            margin: 10px 0 0 0 !important;
            padding: 10px !important;
            background: #666 !important;
            color: white !important;
            border: none !important;
            border-radius: 4px !important;
            cursor: pointer !important;
        `;
        cancelBtn.onclick = () => document.body.removeChild(menu);
        menu.appendChild(cancelBtn);

        document.body.appendChild(menu);
    }

    // 检测当前页面类型
    function getCurrentPageType() {
        const hostname = window.location.hostname;
        const path = window.location.pathname;

        if (path.includes('/video/')) {
            return 'video';
        } else if (hostname === 't.bilibili.com' || path.includes('/following') || path.includes('/t/')) {
            return 'following';
        } else if (path === '/' || path.includes('/index')) {
            return 'home';
        }
        return 'other';
    }

    // 初始化和监听变化
    function init() {
        // 延迟执行以确保页面加载完成
        setTimeout(() => {
            const pageType = getCurrentPageType();

            console.log('Bilibili下载助手已加载，当前页面类型：', pageType);
            console.log('当前URL：', window.location.href);

            // 所有页面都尝试添加视频卡片按钮
            addButtonsToVideoCards();

            // 视频播放页面添加播放器按钮
            if (pageType === 'video') {
                addButtonsToVideoPlayer();
            }
        }, 2000);
    }

    // 监听页面变化
    let lastUrl = location.href;
    const observer = new MutationObserver((mutations) => {
        const url = location.href;
        if (url !== lastUrl) {
            lastUrl = url;
            console.log('页面URL变化，重新初始化');
            // URL变化时重新初始化
            setTimeout(init, 1500);
        } else {
            // 页面内容变化时检查新的视频卡片
            let shouldCheck = false;
            mutations.forEach(mutation => {
                if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                    for (let node of mutation.addedNodes) {
                        if (node.nodeType === 1 && (
                            node.classList?.contains('bili-dyn-list__item') ||
                            node.querySelector?.('.bili-dyn-list__item') ||
                            node.querySelector?.('a[href*="/video/"]')
                        )) {
                            shouldCheck = true;
                            break;
                        }
                    }
                }
            });
            if (shouldCheck) {
                setTimeout(addButtonsToVideoCards, 1000);
            }
        }
    });

    observer.observe(document.body, {
        childList: true,
        subtree: true
    });

    // 初始化
    init();

    // 定期检查新增的视频卡片（适用于动态加载的内容）
    setInterval(() => {
        addButtonsToVideoCards();
    }, 5000);
})();
