// ==UserScript==
// @name         YouTube视频下载助手 (完全优化版)
// @namespace    http://tampermonkey.net/
// @version      3.5
// @description  在YouTube视频页面、首页、订阅页、播放列表和短视频添加下载按钮
// @author       You
// @match        https://www.youtube.com/*
// @connect      localhost
// @grant        GM_xmlhttpRequest
// @grant        unsafeWindow
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    const API_BASE = 'http://localhost:8899';

    // Trusted Types 策略处理
    let trustedPolicy = null;
    try {
        if (window.trustedTypes) {
            trustedPolicy = window.trustedTypes.createPolicy('youtube-downloader', {
                createHTML: (string) => string,
                createScript: (string) => string,
                createScriptURL: (string) => string
            });
        }
    } catch (e) {
        console.log('Trusted Types 策略创建失败，使用备用方案');
    }

    // 创建样式表
    function injectStyles() {
        if (document.getElementById('yt-downloader-styles')) return;

        const style = document.createElement('style');
        style.id = 'yt-downloader-styles';
        style.textContent = `
            .yt-download-btns {
                position: absolute !important;
                top: 8px !important;
                left: 8px !important;
                z-index: 99999 !important;
                display: flex !important;
                gap: 4px !important;
                pointer-events: auto !important;
            }

            .yt-download-btn {
                background: rgba(255, 0, 0, 0.95) !important;
                color: white !important;
                border: none !important;
                padding: 6px 8px !important;
                border-radius: 4px !important;
                cursor: pointer !important;
                font-size: 14px !important;
                font-weight: bold !important;
                min-width: 28px !important;
                height: 28px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                position: relative !important;
                z-index: 99999 !important;
                box-shadow: 0 2px 4px rgba(0,0,0,0.3) !important;
                transition: opacity 0.2s !important;
                opacity: 0.95;
            }

            .yt-download-btn:hover {
                opacity: 1 !important;
            }

            .yt-audio-btn {
                background: rgba(255, 102, 153, 0.95) !important;
            }

            .yt-player-buttons {
                position: absolute !important;
                top: 15px !important;
                left: 15px !important;
                z-index: 99999 !important;
                display: flex !important;
                gap: 8px !important;
                pointer-events: auto !important;
            }

            .yt-player-btn {
                background: rgba(255, 0, 0, 0.95) !important;
                color: white !important;
                border: none !important;
                padding: 10px 15px !important;
                border-radius: 6px !important;
                cursor: pointer !important;
                font-size: 13px !important;
                font-weight: bold !important;
                pointer-events: auto !important;
                z-index: 99999 !important;
                box-shadow: 0 2px 6px rgba(0,0,0,0.3) !important;
            }

            .yt-player-audio-btn {
                background: rgba(255, 102, 153, 0.95) !important;
            }

            /* 短视频按钮样式 - 进一步上移避免遮挡 */
            .yt-shorts-btns {
                position: absolute !important;
                top: -18px !important;
                left: -8px !important;
                z-index: 999999 !important;
                display: flex !important;
                flex-direction: row !important;
                gap: 4px !important;
                pointer-events: auto !important;
                background: rgba(255, 255, 255, 0.98) !important;
                border-radius: 8px !important;
                padding: 4px !important;
                box-shadow: 0 4px 16px rgba(0,0,0,0.4) !important;
                border: 2px solid rgba(0,0,0,0.15) !important;
                backdrop-filter: blur(4px) !important;
            }

            .yt-shorts-btn {
                background: rgba(0, 0, 0, 0.9) !important;
                color: white !important;
                border: 1px solid rgba(255, 255, 255, 0.3) !important;
                padding: 4px 6px !important;
                border-radius: 4px !important;
                cursor: pointer !important;
                font-size: 11px !important;
                font-weight: bold !important;
                min-width: 24px !important;
                height: 24px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                position: relative !important;
                z-index: 999999 !important;
                box-shadow: 0 2px 6px rgba(0,0,0,0.6) !important;
                transition: all 0.2s ease !important;
                opacity: 1 !important;
                font-family: Arial, sans-serif !important;
            }

            .yt-shorts-btn:hover {
                opacity: 1 !important;
                transform: scale(1.15) !important;
                box-shadow: 0 4px 12px rgba(0,0,0,0.8) !important;
            }

            .yt-shorts-audio-btn {
                background: rgba(255, 102, 153, 0.9) !important;
            }

            .yt-shorts-video-btn {
                background: rgba(255, 0, 0, 0.9) !important;
            }

            /* 短视频播放器按钮样式 - 调整到左上角 */
            .yt-shorts-player-btns {
                position: fixed !important;
                top: 15px !important;
                left: 15px !important;
                z-index: 999999 !important;
                display: flex !important;
                flex-direction: row !important;
                gap: 8px !important;
                pointer-events: auto !important;
                background: rgba(255, 255, 255, 0.98) !important;
                border-radius: 8px !important;
                padding: 6px !important;
                box-shadow: 0 6px 20px rgba(0,0,0,0.4) !important;
                border: 2px solid rgba(0,0,0,0.15) !important;
                backdrop-filter: blur(4px) !important;
            }

            .yt-shorts-player-btn {
                background: rgba(0, 0, 0, 0.85) !important;
                color: white !important;
                border: 1px solid rgba(255, 255, 255, 0.3) !important;
                padding: 6px 10px !important;
                border-radius: 6px !important;
                cursor: pointer !important;
                font-size: 12px !important;
                font-weight: bold !important;
                min-width: 60px !important;
                height: 32px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                position: relative !important;
                z-index: 999999 !important;
                box-shadow: 0 2px 8px rgba(0,0,0,0.5) !important;
                transition: all 0.2s ease !important;
                opacity: 0.95 !important;
                font-family: Arial, sans-serif !important;
            }

            .yt-shorts-player-btn:hover {
                opacity: 1 !important;
                transform: scale(1.05) !important;
                box-shadow: 0 4px 12px rgba(0,0,0,0.7) !important;
            }

            .yt-shorts-player-audio-btn {
                background: rgba(255, 102, 153, 0.85) !important;
            }

            .yt-shorts-player-video-btn {
                background: rgba(255, 0, 0, 0.85) !important;
            }

            /* 播放列表按钮样式 */
            .yt-playlist-btns {
                position: absolute !important;
                top: 8px !important;
                left: 8px !important;
                z-index: 99999 !important;
                display: flex !important;
                gap: 4px !important;
                pointer-events: auto !important;
            }

            .yt-playlist-btn {
                background: rgba(255, 0, 0, 0.95) !important;
                color: white !important;
                border: none !important;
                padding: 6px 8px !important;
                border-radius: 4px !important;
                cursor: pointer !important;
                font-size: 12px !important;
                font-weight: bold !important;
                min-width: 26px !important;
                height: 26px !important;
                display: flex !important;
                align-items: center !important;
                justify-content: center !important;
                pointer-events: auto !important;
                position: relative !important;
                z-index: 99999 !important;
                box-shadow: 0 2px 4px rgba(0,0,0,0.3) !important;
                transition: opacity 0.2s !important;
                opacity: 0.9;
            }

            .yt-playlist-btn:hover {
                opacity: 1 !important;
            }

            .yt-playlist-audio-btn {
                background: rgba(255, 102, 153, 0.95) !important;
            }

            /* 响应式调整 - 移动端优化 */
            @media screen and (max-width: 768px) {
                .yt-shorts-btns {
                    top: -15px !important;
                    left: -6px !important;
                    gap: 3px !important;
                    padding: 3px !important;
                }

                .yt-shorts-btn {
                    min-width: 22px !important;
                    height: 22px !important;
                    font-size: 10px !important;
                    padding: 3px 5px !important;
                }

                .yt-shorts-player-btns {
                    top: 12px !important;
                    left: 12px !important;
                    gap: 6px !important;
                    padding: 4px !important;
                }

                .yt-shorts-player-btn {
                    min-width: 50px !important;
                    height: 28px !important;
                    font-size: 10px !important;
                    padding: 4px 8px !important;
                }
            }

            /* 超小屏幕优化 */
            @media screen and (max-width: 480px) {
                .yt-shorts-btns {
                    top: -12px !important;
                    left: -4px !important;
                }

                .yt-shorts-btn {
                    min-width: 20px !important;
                    height: 20px !important;
                    font-size: 9px !important;
                }

                .yt-shorts-player-btns {
                    position: fixed !important;
                    top: 8px !important;
                    left: 8px !important;
                }
            }

            /* 增强按钮可见性和避免被遮挡 */
            .yt-shorts-btns,
            .yt-shorts-player-btns {
                opacity: 1 !important;
                visibility: visible !important;
                display: flex !important;
                pointer-events: auto !important;
                transform: translateZ(0) !important;
            }

            /* 确保按钮容器不被遮挡 */
            .yt-shorts-btns * {
                pointer-events: auto !important;
                z-index: 999999 !important;
                opacity: 1 !important;
                visibility: visible !important;
            }

            .yt-shorts-player-btns * {
                pointer-events: auto !important;
                z-index: 999999 !important;
                opacity: 1 !important;
                visibility: visible !important;
            }

            /* 特殊情况处理 - 确保在所有短视频容器中都能显示 */
            ytd-rich-item-renderer .yt-shorts-btns,
            ytm-shorts-lockup-view-model .yt-shorts-btns,
            .shortsLockupViewModelHost .yt-shorts-btns {
                display: flex !important;
                opacity: 1 !important;
                visibility: visible !important;
                position: absolute !important;
                z-index: 999999 !important;
                transform: translateZ(0) !important;
            }

            /* 悬停时强制保持按钮可见 */
            ytd-rich-item-renderer:hover .yt-shorts-btns,
            ytm-shorts-lockup-view-model:hover .yt-shorts-btns,
            .shortsLockupViewModelHost:hover .yt-shorts-btns {
                display: flex !important;
                opacity: 1 !important;
                visibility: visible !important;
                z-index: 999999 !important;
                transform: translateZ(0) !important;
                pointer-events: auto !important;
            }

            /* 覆盖任何可能隐藏按钮的样式 */
            .yt-shorts-btns:hover,
            .yt-shorts-btns:focus,
            .yt-shorts-btns:active {
                display: flex !important;
                opacity: 1 !important;
                visibility: visible !important;
            }
        `;

        document.head.appendChild(style);
    }

    // 提取视频ID和构建URL
    function extractVideoUrl(element) {
        // 获取视频链接
        const linkElement = element.querySelector('a[href*="/watch?v="]') ||
                           element.querySelector('a[href*="/shorts/"]') ||
                           element.querySelector('a#video-title-link') ||
                           element.querySelector('#video-title') ||
                           element.querySelector('h3 a') ||
                           element.querySelector('a#thumbnail') ||
                           element.querySelector('.shortsLockupViewModelHostEndpoint');

        if (!linkElement) return null;

        let videoUrl = linkElement.href;
        if (!videoUrl) {
            const href = linkElement.getAttribute('href');
            if (href && (href.includes('/watch?v=') || href.includes('/shorts/'))) {
                videoUrl = 'https://www.youtube.com' + href;
            }
        }

        // 如果是shorts URL，转换为watch URL
        if (videoUrl && videoUrl.includes('/shorts/')) {
            const videoId = videoUrl.split('/shorts/')[1].split('?')[0];
            videoUrl = `https://www.youtube.com/watch?v=${videoId}`;
        }

        return videoUrl && (videoUrl.includes('/watch?v=') || videoUrl.includes('/shorts/')) ? videoUrl : null;
    }

    // 创建下载按钮
    function createDownloadButton(type, icon, title, bgClass = '') {
        const btn = document.createElement('button');
        btn.textContent = icon;
        btn.title = title;
        btn.type = 'button';
        btn.className = `${type} ${bgClass}`;

        return btn;
    }

    // 为普通视频卡片添加下载按钮
    function addButtonsToVideoCards() {
        const videoCards = document.querySelectorAll(`
            ytd-video-renderer:not([data-download-added]),
            ytd-compact-video-renderer:not([data-download-added]),
            ytd-grid-video-renderer:not([data-download-added]),
            ytd-rich-item-renderer:not([data-download-added]):not(:has(ytm-shorts-lockup-view-model)),
            ytd-movie-renderer:not([data-download-added])
        `);

        console.log(`找到 ${videoCards.length} 个普通视频卡片`);

        videoCards.forEach((card, index) => {
            try {
                card.setAttribute('data-download-added', 'true');

                const videoUrl = extractVideoUrl(card);
                if (!videoUrl) {
                    console.log(`卡片 ${index} 未找到有效链接`);
                    return;
                }

                let thumbnailContainer = card.querySelector('ytd-thumbnail') ||
                                       card.querySelector('#thumbnail') ||
                                       card.querySelector('.ytd-thumbnail') ||
                                       card.querySelector('#dismissible');

                if (!thumbnailContainer) {
                    return;
                }

                // 创建按钮容器
                const btnContainer = document.createElement('div');
                btnContainer.className = 'yt-download-btns';

                // 创建音频下载按钮
                const audioBtn = createDownloadButton('yt-download-btn', '🎵', '下载音频 (MP3)', 'yt-audio-btn');
                audioBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    downloadMedia(videoUrl, 'audio');
                }, true);

                // 创建视频下载按钮
                const videoBtn = createDownloadButton('yt-download-btn', '🎬', '下载视频');
                videoBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    showQualityMenu(videoUrl);
                }, true);

                btnContainer.appendChild(audioBtn);
                btnContainer.appendChild(videoBtn);

                thumbnailContainer.style.position = 'relative';
                thumbnailContainer.appendChild(btnContainer);

                console.log(`已为普通卡片 ${index} 添加下载按钮`);
            } catch (error) {
                console.error(`处理普通卡片 ${index} 时出错:`, error);
            }
        });
    }

    // 为短视频添加下载按钮 - 优化版
    function addButtonsToShorts() {
        // 多种选择器确保能找到所有短视频卡片
        const shortsSelectors = [
            'ytd-rich-item-renderer:has(ytm-shorts-lockup-view-model):not([data-download-added])',
            'ytm-shorts-lockup-view-model:not([data-download-added])',
            'ytd-rich-item-renderer[is-slim-media]:not([data-download-added])',
            'ytd-rich-item-renderer:has(a[href*="/shorts/"]):not([data-download-added])'
        ];

        let shortsCards = [];
        shortsSelectors.forEach(selector => {
            try {
                const cards = document.querySelectorAll(selector);
                cards.forEach(card => {
                    if (!shortsCards.includes(card)) {
                        shortsCards.push(card);
                    }
                });
            } catch (e) {
                // 忽略选择器错误
            }
        });

        console.log(`找到 ${shortsCards.length} 个短视频卡片`);

        shortsCards.forEach((card, index) => {
            try {
                // 防止重复添加
                if (card.hasAttribute('data-download-added')) {
                    return;
                }
                card.setAttribute('data-download-added', 'true');

                // 多种方式查找短视频链接
                const linkElement = card.querySelector('a[href*="/shorts/"]') ||
                                   card.querySelector('.shortsLockupViewModelHostEndpoint') ||
                                   card.querySelector('ytm-shorts-lockup-view-model a') ||
                                   card.querySelector('a.reel-item-endpoint');

                if (!linkElement) {
                    console.log(`短视频卡片 ${index} 未找到链接元素`);
                    return;
                }

                let videoUrl = linkElement.href;
                if (!videoUrl) {
                    const href = linkElement.getAttribute('href');
                    if (href && href.includes('/shorts/')) {
                        videoUrl = 'https://www.youtube.com' + href;
                    }
                }

                if (!videoUrl || !videoUrl.includes('/shorts/')) {
                    console.log(`短视频卡片 ${index} 未找到有效短视频链接:`, videoUrl);
                    return;
                }

                // 转换为watch URL
                const videoId = videoUrl.split('/shorts/')[1].split('?')[0];
                const watchUrl = `https://www.youtube.com/watch?v=${videoId}`;

                // 检查是否已经有下载按钮
                if (card.querySelector('.yt-shorts-btns')) {
                    console.log(`短视频卡片 ${index} 已有下载按钮`);
                    return;
                }

                // 创建按钮容器 - 直接添加到卡片外层容器
                const btnContainer = document.createElement('div');
                btnContainer.className = 'yt-shorts-btns';

                // 创建音频下载按钮
                const audioBtn = createDownloadButton('yt-shorts-btn', '♪', '下载音频 (MP3)', 'yt-shorts-audio-btn');
                audioBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    downloadMedia(watchUrl, 'audio');
                }, true);

                // 创建视频下载按钮
                const videoBtn = createDownloadButton('yt-shorts-btn', '▼', '下载视频', 'yt-shorts-video-btn');
                videoBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    showQualityMenu(watchUrl);
                }, true);

                btnContainer.appendChild(audioBtn);
                btnContainer.appendChild(videoBtn);

                // 确保卡片容器是相对定位，然后添加按钮到外层
                card.style.position = 'relative';
                card.style.overflow = 'visible'; // 确保按钮不被裁剪
                card.appendChild(btnContainer);

                console.log(`已为短视频卡片 ${index} 添加下载按钮，URL: ${watchUrl}`);
            } catch (error) {
                console.error(`处理短视频卡片 ${index} 时出错:`, error);
            }
        });
    }

    // 为短视频播放器添加下载按钮
    function addButtonsToShortsPlayer() {
        // 检查是否在短视频播放页面
        if (!window.location.pathname.includes('/shorts/')) {
            return;
        }

        // 避免重复添加
        if (document.getElementById('yt-shorts-player-download-buttons')) {
            return;
        }

        // 查找短视频播放器
        const shortsPlayer = document.querySelector('#shorts-player') ||
                            document.querySelector('.html5-video-player') ||
                            document.querySelector('ytd-shorts-player') ||
                            document.querySelector('#player-container');

        if (!shortsPlayer) {
            console.log('未找到短视频播放器');
            return;
        }

        // 从URL获取视频ID
        const videoId = window.location.pathname.split('/shorts/')[1];
        if (!videoId) {
            console.log('无法从URL提取视频ID');
            return;
        }

        const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;

        // 创建按钮容器
        const buttonContainer = document.createElement('div');
        buttonContainer.id = 'yt-shorts-player-download-buttons';
        buttonContainer.className = 'yt-shorts-player-btns';

        // 创建下载音频按钮
        const audioBtn = document.createElement('button');
        audioBtn.className = 'yt-shorts-player-btn yt-shorts-player-audio-btn';
        audioBtn.textContent = '🎵 音频';
        audioBtn.type = 'button';

        audioBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            downloadMedia(videoUrl, 'audio');
        }, true);

        // 创建下载视频按钮
        const videoBtn = document.createElement('button');
        videoBtn.className = 'yt-shorts-player-btn yt-shorts-player-video-btn';
        videoBtn.textContent = '🎬 视频';
        videoBtn.type = 'button';

        videoBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            showQualityMenu(videoUrl);
        }, true);

        buttonContainer.appendChild(audioBtn);
        buttonContainer.appendChild(videoBtn);

        // 直接添加到body以确保显示
        document.body.appendChild(buttonContainer);

        console.log('已为短视频播放器添加下载按钮');
    }

    // 为播放列表视频添加下载按钮
    function addButtonsToPlaylistVideos() {
        const playlistVideos = document.querySelectorAll(`
            ytd-playlist-panel-video-renderer:not([data-download-added])
        `);

        console.log(`找到 ${playlistVideos.length} 个播放列表视频`);

        playlistVideos.forEach((video, index) => {
            try {
                video.setAttribute('data-download-added', 'true');

                const videoUrl = extractVideoUrl(video);
                if (!videoUrl) {
                    console.log(`播放列表视频 ${index} 未找到有效链接`);
                    return;
                }

                // 查找缩略图容器
                const thumbnailContainer = video.querySelector('#thumbnail-container') ||
                                         video.querySelector('ytd-thumbnail') ||
                                         video.querySelector('#thumbnail');

                if (!thumbnailContainer) {
                    console.log(`播放列表视频 ${index} 未找到缩略图容器`);
                    return;
                }

                // 创建按钮容器
                const btnContainer = document.createElement('div');
                btnContainer.className = 'yt-playlist-btns';

                // 创建音频下载按钮
                const audioBtn = createDownloadButton('yt-playlist-btn', '🎵', '下载音频 (MP3)', 'yt-playlist-audio-btn');
                audioBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    downloadMedia(videoUrl, 'audio');
                }, true);

                // 创建视频下载按钮
                const videoBtn = createDownloadButton('yt-playlist-btn', '🎬', '下载视频');
                videoBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    showQualityMenu(videoUrl);
                }, true);

                btnContainer.appendChild(audioBtn);
                btnContainer.appendChild(videoBtn);

                thumbnailContainer.style.position = 'relative';
                thumbnailContainer.appendChild(btnContainer);

                console.log(`已为播放列表视频 ${index} 添加下载按钮`);
            } catch (error) {
                console.error(`处理播放列表视频 ${index} 时出错:`, error);
            }
        });
    }

    // 为视频播放页添加下载按钮
    function addButtonsToVideoPlayer() {
        if (document.getElementById('yt-player-download-buttons')) {
            return;
        }

        const videoPlayer = document.querySelector('#movie_player') ||
                           document.querySelector('ytd-player') ||
                           document.querySelector('.html5-video-player') ||
                           document.querySelector('#player-container');

        if (!videoPlayer) {
            return;
        }

        const videoUrl = window.location.href;

        // 创建按钮容器
        const buttonContainer = document.createElement('div');
        buttonContainer.id = 'yt-player-download-buttons';
        buttonContainer.className = 'yt-player-buttons';

        // 创建下载音频按钮
        const audioBtn = document.createElement('button');
        audioBtn.className = 'yt-player-btn yt-player-audio-btn';
        audioBtn.textContent = '🎵 音频';
        audioBtn.type = 'button';

        audioBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            downloadMedia(videoUrl, 'audio');
        }, true);

        // 创建视频下载按钮
        const videoBtn = document.createElement('button');
        videoBtn.className = 'yt-player-btn';
        videoBtn.textContent = '🎬 视频';
        videoBtn.type = 'button';

        videoBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            showQualityMenu(videoUrl);
        }, true);

        buttonContainer.appendChild(audioBtn);
        buttonContainer.appendChild(videoBtn);

        videoPlayer.style.position = 'relative';
        videoPlayer.appendChild(buttonContainer);

        console.log('已为视频播放器添加下载按钮');
    }

    // 下载媒体函数
    function downloadMedia(url, type, quality) {
        console.log('下载请求:', {url, type, quality});
        showNotification('正在启动下载任务...', 'info');

        GM_xmlhttpRequest({
            method: 'POST',
            url: `${API_BASE}/download`,
            headers: {
                'Content-Type': 'application/json',
            },
            data: JSON.stringify({
                url: url,
                type: type,
                quality: quality
            }),
            onload: function(response) {
                try {
                    const result = JSON.parse(response.responseText);
                    if (result.success) {
                        showNotification('下载任务已启动！保存路径：' + result.download_path, 'success');
                    } else {
                        showNotification('下载失败: ' + result.error, 'error');
                    }
                } catch (e) {
                    showNotification('解析响应失败: ' + e.message, 'error');
                }
            },
            onerror: function() {
                showNotification('连接服务器失败，请确保本地服务正在运行 (http://localhost:8899)', 'error');
            }
        });
    }

    // 显示质量选择菜单
    function showQualityMenu(url) {
        const existingMenu = document.getElementById('yt-quality-menu');
        const existingOverlay = document.getElementById('yt-quality-overlay');
        if (existingMenu) existingMenu.remove();
        if (existingOverlay) existingOverlay.remove();

        // 创建遮罩层
        const overlay = document.createElement('div');
        overlay.id = 'yt-quality-overlay';
        overlay.style.cssText = `
            position: fixed !important;
            top: 0 !important;
            left: 0 !important;
            width: 100% !important;
            height: 100% !important;
            background: rgba(0, 0, 0, 0.5) !important;
            z-index: 9999998 !important;
        `;

        // 创建质量选择菜单
        const menu = document.createElement('div');
        menu.id = 'yt-quality-menu';
        menu.style.cssText = `
            position: fixed !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) !important;
            background: white !important;
            border: 2px solid #ccc !important;
            border-radius: 12px !important;
            padding: 24px !important;
            z-index: 9999999 !important;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3) !important;
            min-width: 250px !important;
            max-width: 90vw !important;
        `;

        const title = document.createElement('h3');
        title.textContent = '选择视频质量';
        title.style.cssText = `
            margin: 0 0 20px 0 !important;
            color: #333 !important;
            text-align: center !important;
            font-size: 18px !important;
        `;
        menu.appendChild(title);

        const qualities = [
            { key: '4k', label: '4K (2160p)', desc: '超高清' },
            { key: 'best', label: '最高画质 (1080p)', desc: '推荐' },
            { key: '720p', label: '高清 (720p)', desc: '平衡' },
            { key: '480p', label: '标清 (480p)', desc: '节省空间' },
            { key: 'small', label: '最小文件', desc: '最小体积' }
        ];

        qualities.forEach((quality, index) => {
            const btn = document.createElement('button');
            btn.type = 'button';

            const labelDiv = document.createElement('div');
            labelDiv.style.textAlign = 'left';

            const titleDiv = document.createElement('div');
            titleDiv.style.fontWeight = 'bold';
            titleDiv.textContent = quality.label;

            const descDiv = document.createElement('div');
            descDiv.style.fontSize = '11px';
            descDiv.style.opacity = '0.8';
            descDiv.textContent = quality.desc;

            labelDiv.appendChild(titleDiv);
            labelDiv.appendChild(descDiv);
            btn.appendChild(labelDiv);

            btn.style.cssText = `
                display: block !important;
                width: 100% !important;
                margin: 8px 0 !important;
                padding: 12px 16px !important;
                background: ${index === 1 ? '#ff0000' : '#666'} !important;
                color: white !important;
                border: none !important;
                border-radius: 8px !important;
                cursor: pointer !important;
                text-align: left !important;
            `;

            btn.addEventListener('click', function() {
                downloadMedia(url, 'video', quality.key);
                if (overlay.parentNode) document.body.removeChild(overlay);
                if (menu.parentNode) document.body.removeChild(menu);
            });

            menu.appendChild(btn);
        });

        // 添加取消按钮
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = '取消';
        cancelBtn.type = 'button';
        cancelBtn.style.cssText = `
            display: block !important;
            width: 100% !important;
            margin: 16px 0 0 0 !important;
            padding: 12px !important;
            background: #999 !important;
            color: white !important;
            border: none !important;
            border-radius: 8px !important;
            cursor: pointer !important;
        `;

        const closeMenu = () => {
            if (overlay.parentNode) document.body.removeChild(overlay);
            if (menu.parentNode) document.body.removeChild(menu);
        };

        cancelBtn.addEventListener('click', closeMenu);
        overlay.addEventListener('click', closeMenu);

        menu.appendChild(cancelBtn);

        document.body.appendChild(overlay);
        document.body.appendChild(menu);
    }

    // 显示通知
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed !important;
            top: 20px !important;
            right: 20px !important;
            padding: 12px 20px !important;
            background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'} !important;
            color: white !important;
            border-radius: 6px !important;
            z-index: 9999999 !important;
            max-width: 400px !important;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3) !important;
            font-size: 14px !important;
        `;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 5000);
    }

    // 清理旧按钮
    function cleanupOldButtons() {
        const oldPlayerButtons = document.getElementById('yt-player-download-buttons');
        if (oldPlayerButtons) {
            oldPlayerButtons.remove();
        }

        const oldShortsPlayerButtons = document.getElementById('yt-shorts-player-download-buttons');
        if (oldShortsPlayerButtons) {
            oldShortsPlayerButtons.remove();
        }

        document.querySelectorAll('[data-download-added]').forEach(card => {
            card.removeAttribute('data-download-added');
        });
    }

    // 防抖函数
    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // 添加所有类型的按钮
    function addAllButtons() {
        addButtonsToVideoCards();
        addButtonsToShorts();
        addButtonsToPlaylistVideos();
    }

    // 初始化
    function init() {
        console.log('YouTube下载助手初始化, 当前URL:', window.location.href);
        injectStyles();

        setTimeout(() => {
            addAllButtons();
            if (window.location.pathname.includes('/watch')) {
                addButtonsToVideoPlayer();
            } else if (window.location.pathname.includes('/shorts/')) {
                addButtonsToShortsPlayer();
            }
        }, 1000);
    }

    // 防抖的添加按钮函数
    const debouncedAddButtons = debounce(() => {
        addAllButtons();
        if (window.location.pathname.includes('/shorts/')) {
            addButtonsToShortsPlayer();
        }
    }, 300);

    // 页面变化监听
    let lastUrl = location.href;
    const observer = new MutationObserver(() => {
        const url = location.href;
        if (url !== lastUrl) {
            console.log('页面导航:', lastUrl, '->', url);
            lastUrl = url;
            cleanupOldButtons();
            setTimeout(init, 1000);
        } else {
            debouncedAddButtons();
        }
    });

    observer.observe(document.body, {
        childList: true,
        subtree: true
    });

    // YouTube导航事件
    window.addEventListener('yt-navigate-finish', () => {
        console.log('YouTube导航完成');
        cleanupOldButtons();
        setTimeout(init, 800);
    });

    // 初始化
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        setTimeout(init, 500);
    }

    // 定期检查（降低频率）
    setInterval(() => {
        debouncedAddButtons();
    }, 8000);

    console.log('YouTube视频下载助手已加载');
})();
